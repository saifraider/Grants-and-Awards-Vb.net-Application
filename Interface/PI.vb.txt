Imports System.Data.SqlClient
Imports System.Data
Imports System.IO.Directory
Imports Excel = Microsoft.Office.Interop.Excel

Public Class PI
    Inherits System.Windows.Forms.Form
    'Create ADO.NET objects.
    Dim connectionString As String
    Dim Queryy As String
    Dim Queryy1 As String
    Dim Queryy2 As String


    Dim APP As New Excel.Application
    Dim worksheet As Excel.Worksheet
    Dim workbook As Excel.Workbook
    Dim misValue As Object = System.Reflection.Missing.Value
    Dim excelLocation As String = "U:\temp\123.xlsx"

    Dim appXL As Excel.Application
    Dim wbXl As Excel.Workbook
    Dim shXL As Excel.Worksheet
    Dim raXL As Excel.Range

    Private Sub GroupBox3_Enter(sender As Object, e As EventArgs) Handles GroupBox3.Enter

    End Sub

    Private Sub PI_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        connectionString = "Data Source=123.345.56.678;Initial Catalog=research;User ID=Saif;Password=yourpassword”

        Using con As New SqlConnection(connectionString)

            Using cmd As SqlCommand = con.CreateCommand()
                cmd.CommandText = "select PI_name from grant_mapping union select distinct PI_name from grant_exception order by PI_Name"
                cmd.CommandType = CommandType.Text
                Using sda As New SqlDataAdapter(cmd)
                    Using dt As New DataTable()
                        sda.Fill(dt)
                        If dt.Rows.Count > 0 Then
                            For i As Integer = 0 To dt.Rows.Count - 1
                                CheckedListBox1.Items.Add(CStr(dt.Rows(i).Item("PI_Name")), False)
                            Next
                        End If

                    End Using
                End Using
            End Using

            Using cmd As SqlCommand = con.CreateCommand()
                cmd.CommandText = "SELECT COLUMN_NAME FROM research.INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'merged_data_table' and column_name <> 'dept_original'"
                cmd.CommandType = CommandType.Text
                Using sda As New SqlDataAdapter(cmd)
                    Using dt As New DataTable()
                        sda.Fill(dt)
                        If dt.Rows.Count > 0 Then
                            For i As Integer = 0 To dt.Rows.Count - 1
                                CheckedListBox4.Items.Add(CStr(dt.Rows(i).Item("COLUMN_NAME")), False)
                            Next
                        End If

                    End Using
                End Using
            End Using

        End Using
    End Sub

    Private Sub RadioButton6_CheckedChanged(sender As Object, e As EventArgs) Handles RadioButton6.CheckedChanged
        CheckedListBox4.Visible = True
        GroupBox5.Visible = True

    End Sub

    Private Sub RadioButton7_CheckedChanged(sender As Object, e As EventArgs) Handles RadioButton7.CheckedChanged
        CheckedListBox4.Visible = False
        GroupBox5.Visible = False
    End Sub

    Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click
        Dim selection_parameter As String
        Dim itemChecked123 As Object
        selection_parameter = ""
        Dim flag As Boolean = False
        Dim PI_flag As Boolean = False
        If RadioButton6.Checked Then


            For Each itemChecked123 In CheckedListBox4.CheckedItems
                If itemChecked123.ToString.Equals("Department") Then
                    flag = True
                    If RadioButton1.Checked Then
                        selection_parameter = selection_parameter + "Grant_department" + ","
                    End If
                    If RadioButton2.Checked Then
                        selection_parameter = selection_parameter + "NIH_department" + ","
                    End If

                Else
                    flag = True
                    selection_parameter = selection_parameter + itemChecked123.ToString + ","
                End If
            Next
            If flag Then
                selection_parameter = selection_parameter.Substring(0, selection_parameter.LastIndexOf(","))

                'MsgBox(selection_parameter)
            End If

        End If


            Dim PI_parameter As String
        Dim itemChecked1 As Object
        Dim check1 As Integer
        Dim check21 As Integer
        Dim correct1 As String
        Dim errorCheck1() As String
        check21 = 0
        correct1 = ""

        PI_parameter = "("
        For Each itemChecked1 In CheckedListBox1.CheckedItems
            check1 = 1
            check21 = 0
            PI_flag = True
            If itemChecked1.ToString.IndexOf("'") > 0 Then
                check21 = 1
                'MsgBox(itemChecked1.ToString)
                errorCheck1 = itemChecked1.ToString.Split("'")
                For Each letter In errorCheck1
                    correct1 = correct1 + letter + "''"
                Next
                correct1 = correct1.Substring(0, correct1.LastIndexOf("''"))
            End If
            If check21 = 1 Then
                PI_parameter = PI_parameter + "'" + correct1 + "'" + ", "
            Else
                PI_parameter = PI_parameter + "'" + itemChecked1.ToString + "'" + ", "
            End If
        Next

        If PI_flag Then


            PI_parameter = PI_parameter.Substring(0, PI_parameter.LastIndexOf(","))

            PI_parameter = PI_parameter + ")"
            'MsgBox(PI_parameter.ToString)

        End If



        Dim strtdate As String
        Dim enddate As String

        strtdate = DateTimePicker1.Value.ToString("yyyy-MM-dd")
        enddate = DateTimePicker2.Value.ToString("yyyy-MM-dd")

        If DateTimePicker1.Value > DateTimePicker2.Value Then
            MsgBox(" Date incompatibility")
            Return

        End If

        If RadioButton6.Checked Then

            If RadioButton1.Checked Then
                Queryy1 = "select " + selection_parameter + " from ( select c.Sponsor_Award_Number, c.Account_Number,c.KC_Award_Number, c.Document_Number,c.KC_Award_Version, c.PCR_ID, c.Award_Status,c.Award_Type,c.Activity_Type,c.Transaction_Type ,c2.amount As Current_Action_Amount, c2.dc as Direct_Cost, c2.dd as Indirect_direct_cost, c.Notice_Date, c.Project_Title,c.School, gm.Grant_Department,c.PI_Person_ID,c.PI_Name,c.Number_of_COPI,c.Sponsor_Code,c.Sponsor_Acronym,c.Sponsor_Name,c.Sponsor_Type,c.Prime_Sponsor_Code,c.Prime_Sponsor_Acronym,c.Prime_Sponsor_Name,c.Project_Start_Date,c.Current_Period_End_Date,c.Project_End_Date, c.Anticipated_Total, c.Obligated_Amount_To_Date,c.On_Campus_Rate,c.Off_Campus_Rate,c.Max_Account_Number,c.Co_PI_Name,c.Document_Finalized_Date from merged_data_table c inner join ( select Sponsor_Award_Number, Account_Number  ,max(Notice_Date) as max_date,sum(Current_Action_Amount) as amount,sum(Direct_Cost) as dc ,sum(Indirect_Direct_Cost) as dd from merged_data_table where Notice_Date between @noticestartdate and @noticeenddate group by Sponsor_Award_Number, Account_Number ) c2 on c2.sponsor_award_number = c.sponsor_award_number and c2.Account_Number = c.Account_Number  and c2.max_date = c.notice_date inner join Grant_mapping gm on c.PI_Name = gm.PI_Name and gm.PI_name in "
                Queryy2 = "select c.Sponsor_Award_Number, c.Account_Number,c.KC_Award_Number, c.Document_Number,c.KC_Award_Version, c.PCR_ID, c.Award_Status,c.Award_Type,c.Activity_Type,c.Transaction_Type ,c2.amount As Current_Action_Amount, c2.dc as Direct_Cost, c2.dd as Indirect_direct_cost, c.Notice_Date, c.Project_Title,c.School, gm.Grant_Department,c.PI_Person_ID,c.PI_Name,c.Number_of_COPI,c.Sponsor_Code,c.Sponsor_Acronym,c.Sponsor_Name,c.Sponsor_Type,c.Prime_Sponsor_Code,c.Prime_Sponsor_Acronym,c.Prime_Sponsor_Name,c.Project_Start_Date,c.Current_Period_End_Date,c.Project_End_Date, c.Anticipated_Total, c.Obligated_Amount_To_Date,c.On_Campus_Rate,c.Off_Campus_Rate,c.Max_Account_Number,c.Co_PI_Name,c.Document_Finalized_Date from merged_data_table c inner join ( select Sponsor_Award_Number, Account_Number , max(Notice_Date) as max_date,sum(Current_Action_Amount) as amount,sum(Direct_Cost) as dc ,sum(Indirect_Direct_Cost) as dd from merged_data_table where Notice_Date between @noticestartdate and @noticeenddate group by Sponsor_Award_Number,Account_Number ) c2 on c2.sponsor_award_number = c.sponsor_award_number and c2.Account_Number = c.Account_Number  and c2.max_date = c.notice_date inner join Grant_exception gm on c.PI_Name = gm.PI_Name and gm.Grant_Department= c.Department and  gm.PI_name in "
            End If

            If RadioButton2.Checked Then
                Queryy1 = "select " + selection_parameter + " from ( select c.Sponsor_Award_Number, c.Account_Number,c.KC_Award_Number, c.Document_Number,c.KC_Award_Version, c.PCR_ID, c.Award_Status,c.Award_Type,c.Activity_Type,c.Transaction_Type ,c2.amount As Current_Action_Amount, c2.dc as Direct_Cost, c2.dd as Indirect_direct_cost, c.Notice_Date, c.Project_Title,c.School, gm.NIH_Department,c.PI_Person_ID,c.PI_Name,c.Number_of_COPI,c.Sponsor_Code,c.Sponsor_Acronym,c.Sponsor_Name,c.Sponsor_Type,c.Prime_Sponsor_Code,c.Prime_Sponsor_Acronym,c.Prime_Sponsor_Name,c.Project_Start_Date,c.Current_Period_End_Date,c.Project_End_Date, c.Anticipated_Total, c.Obligated_Amount_To_Date,c.On_Campus_Rate,c.Off_Campus_Rate,c.Max_Account_Number,c.Co_PI_Name,c.Document_Finalized_Date from merged_data_table c inner join ( select Sponsor_Award_Number, Account_Number  ,max(Notice_Date) as max_date,sum(Current_Action_Amount) as amount,sum(Direct_Cost) as dc ,sum(Indirect_Direct_Cost) as dd from merged_data_table where Notice_Date between @noticestartdate and @noticeenddate group by Sponsor_Award_Number, Account_Number ) c2 on c2.sponsor_award_number = c.sponsor_award_number and c2.Account_Number = c.Account_Number  and c2.max_date = c.notice_date inner join NIH_mapping gm on c.PI_Name = gm.PI_Name and gm.PI_name in "
                Queryy2 = "select c.Sponsor_Award_Number, c.Account_Number,c.KC_Award_Number, c.Document_Number,c.KC_Award_Version, c.PCR_ID, c.Award_Status,c.Award_Type,c.Activity_Type,c.Transaction_Type ,c2.amount As Current_Action_Amount, c2.dc as Direct_Cost, c2.dd as Indirect_direct_cost, c.Notice_Date, c.Project_Title,c.School, gm.NIH_Department,c.PI_Person_ID,c.PI_Name,c.Number_of_COPI,c.Sponsor_Code,c.Sponsor_Acronym,c.Sponsor_Name,c.Sponsor_Type,c.Prime_Sponsor_Code,c.Prime_Sponsor_Acronym,c.Prime_Sponsor_Name,c.Project_Start_Date,c.Current_Period_End_Date,c.Project_End_Date, c.Anticipated_Total, c.Obligated_Amount_To_Date,c.On_Campus_Rate,c.Off_Campus_Rate,c.Max_Account_Number,c.Co_PI_Name,c.Document_Finalized_Date from merged_data_table c inner join ( select Sponsor_Award_Number, Account_Number , max(Notice_Date) as max_date,sum(Current_Action_Amount) as amount,sum(Direct_Cost) as dc ,sum(Indirect_Direct_Cost) as dd from merged_data_table where Notice_Date between @noticestartdate and @noticeenddate group by Sponsor_Award_Number,Account_Number ) c2 on c2.sponsor_award_number = c.sponsor_award_number and c2.Account_Number = c.Account_Number  and c2.max_date = c.notice_date inner join NIH_exception gm on c.PI_Name = gm.PI_Name and gm.NIH_Department= c.Department and  gm.PI_name in "
            End If

            Queryy1 = Queryy1 + PI_parameter + " "
            Queryy2 = Queryy2 + PI_parameter + " ) dtt"
            Queryy = Queryy1 + " Union " + Queryy2

        End If





        If RadioButton1.Checked Then
            If RadioButton6.Checked Then
                If PI_flag And flag Then
                    ' Grant , PI , account number
                    Using con As New SqlConnection(connectionString)
                        Using cmd As SqlCommand = con.CreateCommand()

                            If RadioButton3.Checked Then
                                Queryy = Queryy + " where Account_Number like '51%' order by PI_name"
                            End If
                            If RadioButton4.Checked Then
                                Queryy = Queryy + " where Account_Number not like '51%' order by PI_name"
                            End If
                            'MsgBox(Queryy)


                            cmd.CommandText = Queryy
                            cmd.Parameters.AddWithValue("@noticestartdate", strtdate)
                            cmd.Parameters.AddWithValue("@noticeenddate", enddate)
                            cmd.CommandType = CommandType.Text
                            Using sda As New SqlDataAdapter(cmd)
                                Using dt As New DataTable()
                                    sda.Fill(dt)
                                    DataGridView1.DataSource = dt
                                End Using
                            End Using
                        End Using
                    End Using
                Else
                    MsgBox("Please select at least one item in checkbox")
                End If

            End If

        End If


        If RadioButton1.Checked Then
            If RadioButton7.Checked Then
                If PI_flag Then
                    ' Grant , total , account number

                    Dim insert_text As String = ""
                    If RadioButton3.Checked Then
                        insert_text = " and cd.Account_Number like '51%' "
                    End If
                    If RadioButton4.Checked Then
                        insert_text = " and cd.Account_Number not like '51%' "
                    End If
                    If RadioButton5.Checked Then
                        insert_text = ""
                    End If

                    Queryy = "select cd.PI_Name,dm.Grant_Department ,sum(cd.Current_Action_Amount) as Current_Action_Amount, sum(cd.Direct_Cost) as Direct_Cost, sum(cd.Indirect_Direct_Cost) as Indirect_Direct_Cost from merged_data_table cd inner join Grant_mapping dm on dm.PI_Name = cd.PI_Name and cd.Notice_Date between @noticestartdate and @noticeenddate " + insert_text + " and cd.PI_Name in " + PI_parameter + " group by dm.Grant_Department,cd.PI_Name union select cd.PI_Name,dm.Grant_Department ,sum(cd.Current_Action_Amount) as Current_Action_Amount, sum(cd.Direct_Cost) as Direct_Cost, sum(cd.Indirect_Direct_Cost) as Indirect_Direct_Cost from merged_data_table cd inner join Grant_Exception dm on dm.PI_Name = cd.PI_Name and dm.Grant_Department = cd.Department " + insert_text + " and Notice_Date between @noticestartdate and @noticeenddate and dm.PI_Name in " + PI_parameter + " group by dm.Grant_Department,cd.PI_Name"
                    Using con As New SqlConnection(connectionString)
                        Using cmd As SqlCommand = con.CreateCommand()

                            'MsgBox(Queryy)


                            cmd.CommandText = Queryy
                            cmd.Parameters.AddWithValue("@noticestartdate", strtdate)
                            cmd.Parameters.AddWithValue("@noticeenddate", enddate)
                            cmd.CommandType = CommandType.Text
                            Using sda As New SqlDataAdapter(cmd)
                                Using dt As New DataTable()
                                    sda.Fill(dt)
                                    DataGridView1.DataSource = dt
                                End Using
                            End Using
                        End Using
                    End Using
                Else
                    MsgBox("Please select at least one PI")
                End If
            End If


        End If

        If RadioButton2.Checked Then
            If RadioButton6.Checked Then
                If PI_flag And flag Then
                    Using con As New SqlConnection(connectionString)
                        Using cmd As SqlCommand = con.CreateCommand()

                            If RadioButton3.Checked Then
                                Queryy = Queryy + " where Account_Number like '51%' order by PI_name"
                            End If
                            If RadioButton4.Checked Then
                                Queryy = Queryy + " where Account_Number not like '51%' order by PI_name"
                            End If
                            'MsgBox(Queryy)

                            cmd.CommandText = Queryy
                            cmd.Parameters.AddWithValue("@noticestartdate", strtdate)
                            cmd.Parameters.AddWithValue("@noticeenddate", enddate)
                            cmd.CommandType = CommandType.Text
                            Using sda As New SqlDataAdapter(cmd)
                                Using dt As New DataTable()
                                    sda.Fill(dt)
                                    DataGridView1.DataSource = dt
                                End Using
                            End Using
                        End Using
                    End Using
                Else
                    MsgBox("Please select at least one item in checkbox")
                End If

            End If

        End If

        If RadioButton2.Checked Then
            If RadioButton7.Checked Then
                If PI_flag Then


                    'NIH, total , Acocount number

                    Dim insert_text As String = ""
                    If RadioButton3.Checked Then
                        insert_text = " and cd.Account_Number like '51%' "
                    End If
                    If RadioButton4.Checked Then
                        insert_text = " and cd.Account_Number not like '51%' "
                    End If
                    If RadioButton5.Checked Then
                        insert_text = ""
                    End If

                    Queryy = "select cd.PI_Name,dm.NIH_Department ,sum(cd.Current_Action_Amount) as Current_Action_Amount, sum(cd.Direct_Cost) as Direct_Cost, sum(cd.Indirect_Direct_Cost) as Indirect_Direct_Cost from merged_data_table cd inner join NIH_mapping dm on dm.PI_Name = cd.PI_Name and cd.Notice_Date between @noticestartdate and @noticeenddate " + insert_text + " and cd.PI_Name in " + PI_parameter + " group by dm.NIH_Department,cd.PI_Name union select cd.PI_Name,dm.NIH_Department ,sum(cd.Current_Action_Amount) as Current_Action_Amount, sum(cd.Direct_Cost) as Direct_Cost, sum(cd.Indirect_Direct_Cost) as Indirect_Direct_Cost from merged_data_table cd inner join NIH_Exception dm on dm.PI_Name = cd.PI_Name and dm.NIH_Department = cd.Department " + insert_text + " and Notice_Date between @noticestartdate and @noticeenddate and dm.PI_Name in " + PI_parameter + " group by dm.NIH_Department,cd.PI_Name"
                    Using con As New SqlConnection(connectionString)
                        Using cmd As SqlCommand = con.CreateCommand()

                            'MsgBox(Queryy)


                            cmd.CommandText = Queryy
                            cmd.Parameters.AddWithValue("@noticestartdate", strtdate)
                            cmd.Parameters.AddWithValue("@noticeenddate", enddate)
                            cmd.CommandType = CommandType.Text
                            Using sda As New SqlDataAdapter(cmd)
                                Using dt As New DataTable()
                                    sda.Fill(dt)
                                    DataGridView1.DataSource = dt
                                End Using
                            End Using
                        End Using
                    End Using
                Else
                    MsgBox("please select atleast one PI")
                End If

            End If
        End If


    End Sub

    Private Sub Button3_Click(sender As Object, e As EventArgs) Handles Button3.Click
        ' Start Excel and get Application object.
        appXL = CreateObject("Excel.Application")
        appXL.Visible = True
        ' Add a new workbook.
        wbXl = appXL.Workbooks.Add
        shXL = wbXl.ActiveSheet
        ' Add table headers going cell by cell.
        Dim dgv As DataGridView = DataGridView1


        Dim columnsCount As Integer = DataGridView1.Columns.Count
        For Each column In DataGridView1.Columns
            'MsgBox(column.Name.ToString)
            shXL.Cells(1, column.Index + 1).Columns.AutoFit()
            shXL.Cells(1, column.Index + 1).Value = column.Name.ToString
            shXL.Cells(1, column.Index + 1).Font.Bold = True

        Next

        For r As Integer = 1 To dgv.RowCount
            'Dim r As DataGridViewRow = dgv.Rows(r)
            For c As Integer = 0 To dgv.ColumnCount - 1

                If TypeOf (dgv.Rows(r - 1).Cells(c).Value) Is String Then

                    Dim cellValue As String = TryCast(dgv.Rows(r - 1).Cells(c).Value, String)

                    If cellValue Is Nothing Then
                        'MsgBox("empty")

                        shXL.Cells(r + 1, c + 1).Value = " "
                        'MsgBox("entered")

                    Else
                        'MsgBox(cellValue + "<--- string")
                        shXL.Cells(r + 1, c + 1).NumberFormat = "@"
                        shXL.Cells(r + 1, c + 1).Value = "" + cellValue + ""
                    End If


                ElseIf TypeOf (dgv.Rows(r - 1).Cells(c).Value) Is Int32 Then
                    shXL.Cells(r + 1, c + 1).NumberFormat = "@"
                    Dim cellValue As Integer = dgv.Rows(r - 1).Cells(c).Value
                    'MsgBox(cellValue.ToString + "<--- integere")

                    shXL.Cells(r + 1, c + 1).Value = cellValue

                ElseIf TypeOf (dgv.Rows(r - 1).Cells(c).Value) Is Date Then

                    Dim cellValue As Date = dgv.Rows(r - 1).Cells(c).Value
                    'MsgBox(cellValue.ToString + "<--- integere")
                    shXL.Cells(r + 1, c + 1).Value = cellValue

                ElseIf TypeOf (dgv.Rows(r - 1).Cells(c).Value) Is Date Then

                    Dim cellValue As Date = dgv.Rows(r - 1).Cells(c).Value
                    'MsgBox(cellValue.ToString + "<--- integere")
                    shXL.Cells(r + 1, c + 1).Value = cellValue
                    shXL.Cells(r + 1, c + 1).Alignment = Left

                ElseIf TypeOf (dgv.Rows(r - 1).Cells(c).Value) Is Decimal Then
                    'shXL.Cells(r + 1, c + 1).NumberFormat = "@"
                    Dim cellValue As Decimal = dgv.Rows(r - 1).Cells(c).Value
                    'MsgBox(cellValue.ToString + "<--- integere")
                    shXL.Cells(r + 1, c + 1).Value = cellValue

                ElseIf TypeOf (dgv.Rows(r - 1).Cells(c).Value) Is Double Then
                    'shxl.cells(r + 1, c + 1).numberformat = "@"
                    Dim cellvalue As Double = dgv.Rows(r - 1).Cells(c).Value
                    'msgbox(cellvalue.tostring + "<--- integere")
                    shXL.Cells(r + 1, c + 1).value = cellvalue


                End If

            Next
        Next
        ' Make sure Excel is visible and give the user control
        ' of Excel's lifetime.
        appXL.Visible = True
        appXL.UserControl = True
        ' Release object references.
        raXL = Nothing
        shXL = Nothing
        wbXl = Nothing
        appXL.Quit()
        appXL = Nothing
        Exit Sub
Err_Handler:
        MsgBox(Err.Description, vbCritical, "Error: " & Err.Number)
    End Sub

    Private Sub Button4_Click(sender As Object, e As EventArgs) Handles Button4.Click
        Me.Hide()
        startup.Show()

    End Sub

    Private Sub Button2_Click(sender As Object, e As EventArgs) Handles Button2.Click
        Me.Hide()
        Application.Exit()

    End Sub

    Private Sub CheckBox1_CheckedChanged(sender As Object, e As EventArgs) Handles CheckBox1.CheckedChanged
        If CheckBox1.Checked Then
            For i = 0 To CheckedListBox1.Items.Count - 1
                CheckedListBox1.SetItemChecked(i, True)
            Next
        Else
            For i = 0 To CheckedListBox1.Items.Count - 1
                CheckedListBox1.SetItemChecked(i, False)
            Next
        End If
    End Sub

    Private Sub CheckBox4_CheckedChanged(sender As Object, e As EventArgs) Handles CheckBox4.CheckedChanged
        If CheckBox4.Checked Then
            For i = 0 To CheckedListBox4.Items.Count - 1
                CheckedListBox4.SetItemChecked(i, True)
            Next
        Else
            For i = 0 To CheckedListBox4.Items.Count - 1
                CheckedListBox4.SetItemChecked(i, False)
            Next
        End If
    End Sub
End Class